{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/types-of-data/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Types of Data","date":"August 1, 2021"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Types of Data\",\n  \"date\": \"2021-08-01\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can find a lot of different Data types browsing the Web. I want to write about some of them.\"), mdx(\"p\", null, \"First of all, we divide data into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Qualitative\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Quantitative\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Qualitative\"), \" is usually subjectively described qualities and characteristics. Subcategories are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Nominal- qualitative data that's categorized without a set order. A good example here is the range of gender: male/ female/ others. Or it could be just yes/ no/ don\\u2019t know. We can\\u2019t count it.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Ordinal - a type of qualitative data with a set order or scale. For example, the size of a T-shirt could be small/ medium/ large. Our rating of the new film is somewhere between 1 and 5 stars. Here the user needs to choose from a limited number of values.\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Quantitative\"), \" data can be measured or counted and then expressed as a number. Two types of quantitative data with a set order or scale are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Discrete - the numerical values that are integers and have a limited number of values. It\\u2019s always a whole number. Examples are products sold last month, how many cameras have your smartphone, how many customers did we have last week.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Continuous - the numerical value that is counted and can have almost any value, the whole number or float. Examples are the average height of 1st year\\u2019s students, the temperature outside, and so on.\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./imgs/data_types.png\",\n    \"alt\": \"Data types\"\n  })), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Other common data types are:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integer (1, 2, 3)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Floating-point number (1.5, 1.78, 4.7866)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Character ( a, !, , *)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"String (\\u201Chi there!\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Boolean (True/False)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Date (YYYY-MM-DD, ISO 8601)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Time (hh:mm:ss)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Datetime (YYYY-MM-DD hh:mm:ss)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Timestamp (represents the number of seconds that have elapsed since midnight 1 January, 1970)\")), mdx(\"p\", null, \"Then we can divide our data on:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Structured\"), \" - is data that's organized in a certain format, such as rows and columns. Spreadsheets and relational databases are two examples of software that can store data in a structured way.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Unstructured\"), \" - this is data that is not organized in any easily identifiable manner (audio, video files, email, social nets posts).\")), mdx(\"p\", null, \"Also, there are\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1st party data\"), \", or 1P data - information that the company collect directly from the user/audience and owns it;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"2nd party data\"), \" - someone else\\u2019s 1P data;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"3rd party data\"), \" - information that was aggregated from various sources;\")), mdx(\"p\", null, \"I believe that the most reliable is 1st party data, but we live in the real world, where you can\\u2019t collect all the data. So, when purchasing the 3rd party data you just need to decide on a reliable data provider, find out how they collect data, when, and where.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"cddcffdc-36e8-5611-946e-ee940c8c880f","slug":"types-of-data","__params":{"slug":"types-of-data"}}},
    "staticQueryHashes": []}